{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/AddPost/addpost.component.css","webpack:///./src/app/AddPost/addpost.component.html","webpack:///./src/app/AddPost/addpost.component.ts","webpack:///./src/app/AddPost/material/material.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/AuthService.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/post.model.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/user/user.model.ts","webpack:///./src/app/user/user.resolver.ts","webpack:///./src/app/user/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container {\\r\\n    width:70%;\\r\\n    margin: auto;\\r\\n}\\r\\n\\r\\n.full-width {\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <form (ngSubmit)=\\\"onSubmit(f)\\\" #f=\\\"ngForm\\\">\\r\\n        <p>\\r\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"full-width\\\">\\r\\n                <mat-label>Nội dung bài đăng</mat-label>\\r\\n                <textarea ngModel name=\\\"content\\\" matInput rows=\\\"15\\\"></textarea>\\r\\n                <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\\r\\n                <mat-hint>(Bắt buộc)</mat-hint>\\r\\n            </mat-form-field>\\r\\n        </p>\\r\\n        <button mat-raised-button color=\\\"primary\\\">Đăng</button>\\r\\n    </form>\\r\\n\\r\\n</div>\"","import { map } from 'rxjs/operators';\r\nimport { HomeComponent } from './../home/home.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { Post } from './../post.model';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { PostService } from './../post.service';\r\n\r\n@Component({\r\n  selector: 'app-add-post',\r\n  templateUrl: 'addpost.component.html',\r\n  styleUrls: ['addpost.component.css']\r\n})\r\nexport class AddPostComponent {\r\n\r\n  constructor(private postService: PostService,\r\n    private router: Router) { }\r\n\r\n  onSubmit(f: NgForm) {\r\n    let newPost: Post = new Post(f.value.content);\r\n    this.postService.addPost(newPost).subscribe(\r\n      res => {\r\n        this.router.navigate(['/']);\r\n      });\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { \r\n    MatButtonModule, \r\n    MatIconModule, \r\n    MatToolbarModule, \r\n    MatTabsModule, \r\n    MatCardMdImage, \r\n    MatCardModule, \r\n    MatGridListModule,\r\n    MatFormFieldModule,\r\n    MatInputModule\r\n } from '@angular/material';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatButtonModule, \r\n        MatToolbarModule, \r\n        MatIconModule, \r\n        MatTabsModule, \r\n        MatCardModule, \r\n        MatGridListModule,\r\n        MatFormFieldModule,\r\n        MatInputModule\r\n    ],\r\n    exports: [\r\n        MatButtonModule, \r\n        MatToolbarModule, \r\n        MatIconModule, \r\n        MatTabsModule, \r\n        MatCardModule, \r\n        MatGridListModule,\r\n        MatFormFieldModule,\r\n        MatInputModule\r\n    ]\r\n})\r\n\r\nexport class MaterialModule {}","import { UserResolver } from './user/user.resolver';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AppComponent } from './app.component';\r\nimport { AddPostComponent } from './AddPost/addpost.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UserComponent } from './user/user.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    { path: 'add-post', component: AddPostComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'user', component: UserComponent, resolve: { data: UserResolver}}\r\n];\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(appRoutes, { useHash: true})],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","module.exports = \".sss {\\r\\n    width:70%;\\r\\n    margin: auto;\\r\\n}\\r\\n.example-icon {\\r\\n    padding: 0 25px;\\r\\n  }\\r\\n.example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" >\\r\\n  <mat-toolbar-row class=\\\"sss\\\">\\r\\n    <span>\\r\\n      <a routerLink=\\\"/\\\">\\r\\n        <img src=\\\"https://78.media.tumblr.com/0003030a33d68812095c422cf802b9cd/tumblr_og919rS4Hr1vf6rzdo1_500.gif\\\" style=\\\"width:64px;\\\">\\r\\n      </a>\\r\\n    </span>\\r\\n\\r\\n    <span class=\\\"example-spacer\\\"></span>\\r\\n    <button mat-button routerLink=\\\"/login\\\"><mat-icon class=\\\"example-icon\\\">person_add</mat-icon> Đăng nhập</button>\\r\\n    <button mat-button routerLink=\\\"add-post\\\"><mat-icon class=\\\"example-icon\\\">create</mat-icon> Viết bài</button>\\r\\n    <button mat-button>Đăng kí</button>\\r\\n  </mat-toolbar-row>\\r\\n</mat-toolbar>\\r\\n<router-outlet></router-outlet>\"","import { Post } from './post.model';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n\n  constructor(private router: Router) {}\n  navHome() {\n    this.router.navigate(['/']);\n  }\n}\n","import { UserResolver } from './user/user.resolver';\nimport { UserService } from './user/user.service';\nimport { AuthService } from './login/AuthService';\nimport { environment } from './../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AngularFireModule } from 'angularfire2';\nimport { AngularFireDatabaseModule } from 'angularfire2/database';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\nimport { AngularFirestoreModule } from 'angularfire2/firestore';\n\nimport { PostService } from './post.service';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './AddPost/material/material.module';\nimport { AddPostComponent } from './AddPost/addpost.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserComponent } from './user/user.component';\n\nexport const firebase = {\n  firebase: {\n    apiKey: \"AIzaSyC5y-e7x9Y_eWNrDf6p3-9kZrq8TAhx-kw\",\n    authDomain: \"ngblog-a6835.firebaseapp.com\",\n    databaseURL: \"https://ngblog-a6835.firebaseio.com\",\n    projectId: \"ngblog-a6835\",\n    storageBucket: \"ngblog-a6835.appspot.com\",\n    messagingSenderId: \"1060454062184\"\n  }\n}\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddPostComponent,\n    HomeComponent,\n    LoginComponent,\n    UserComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireDatabaseModule,\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [PostService, AuthService, UserService, UserResolver],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".example-icon {\\r\\n    padding: 0 14px;\\r\\n  }\\r\\n  \\r\\n  .example-spacer {\\r\\n    flex: 1 1 auto;\\r\\n  }\\r\\n  \\r\\n  .sss {\\r\\n      width:70%;\\r\\n      margin: auto;\\r\\n  }\\r\\n  \\r\\n  .example-card {\\r\\n  }\\r\\n  \\r\\n  .rows {\\r\\n    display: flex;\\r\\n  }\\r\\n  \\r\\n  .align-items-center {\\r\\n    align-items: center;\\r\\n  }\\r\\n  \\r\\n  mat-card-content {\\r\\n      display: block;\\r\\n  }\\r\\n  \\r\\n  mat-icon{}\\r\\n  \\r\\n  /* .bubble {\\r\\n    position: absolute;\\r\\n    list-style: none;\\r\\n    display: block;\\r\\n    width: 40px;\\r\\n    height: 40px;\\r\\n    background-color: hsla(0,0%,100%,.15);\\r\\n    bottom: -160px;\\r\\n    -webkit-animation: square 25s infinite;\\r\\n    animation: square 25s infinite;\\r\\n    transition-timing-function: linear;\\r\\n    box-sizing: border-box;\\r\\n    border: 1px solid black;\\r\\n  }\\r\\n@keyframes square{\\r\\n    0% {\\r\\n        -webkit-transform: translateY(0);\\r\\n        transform: translateY(0);\\r\\n    }\\r\\n    100% {\\r\\n        -webkit-transform: translateY(-700px) rotate(600deg);\\r\\n        transform: translateY(-700px) rotate(600deg);\\r\\n    }\\r\\n} */\"","module.exports = \"<mat-tab-group class=\\\"sss\\\">\\n  <mat-tab mat-stretch-tabs>\\n    <ng-template mat-tab-label>\\n      Bài mới\\n    </ng-template>\\n    <!-- <mat-card class=\\\"example-card\\\" *ngFor=\\\"let post of posts, let i = index\\\">\\n      <mat-card-header>\\n          \\n      </mat-card-header>\\n      <mat-card-content>\\n          <p>{{ post.content }}</p>\\n      </mat-card-content>\\n      <mat-card-actions>\\n        \\n      </mat-card-actions> -->\\n    <mat-card class=\\\"example-card\\\" *ngFor=\\\"let post of posts, let i = index\\\">\\n      <mat-card-header>\\n        <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n        <mat-card-title>{{ post.createdDate | date: 'dd/MM/yyyy H:mm:ss' }}</mat-card-title>\\n        <div class=\\\"rows align-items-center\\\"><mat-card-subtitle><mat-icon>visibility</mat-icon>    {{ post.viewCount }}</mat-card-subtitle>\\n        </div>\\n        \\n      </mat-card-header>\\n      <!-- cho nay` de img ne` -->\\n      <mat-card-content>\\n        <p>\\n          {{ post.content }}\\n          <!-- The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan. A small, agile dog that copes\\n          very well with mountainous terrain, the Shiba Inu was originally bred for hunting. -->\\n        </p>\\n      </mat-card-content>\\n      <mat-card-actions>\\n        <h4>\\n          <div class=\\\"rows align-items-center\\\">\\n            <button mat-button (click)=\\\"onLike(i)\\\"><mat-icon>thumb_up_alt</mat-icon>{{ post.like }}</button>\\n            <button mat-button><mat-icon>comment</mat-icon>{{ post.comment }}</button> <button mat-button>Xem</button>\\n          </div>\\n        </h4>\\n      </mat-card-actions>\\n    </mat-card>\\n  </mat-tab>\\n  <mat-tab>\\n    <ng-template mat-tab-label>\\n      <mat-icon>thumb_down</mat-icon> Bài hot\\n    </ng-template>\\n    <h1>...</h1>\\n    <p>...</p>\\n  </mat-tab>\\n</mat-tab-group>\\n\\n<!-- <div class=\\\"bubble\\\">\\n  \\n</div> -->\"","import { Subscription } from 'rxjs';\nimport { PostService } from './../post.service';\nimport { Post } from './../post.model';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { AngularFireDatabase } from 'angularfire2/database';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  posts: Post[] = [\n  ];\n  firebase = null;\n  subs: Subscription;\n\n  constructor(private postService: PostService,\n    private angularFire: AngularFireDatabase) { }\n\n  ngOnInit() {\n    this.onInitApp();\n  }\n\n  onLike(id: number) {\n    if (!this.posts[id].isLiked) {\n      this.posts[id].like++;\n      this.posts[id].isLiked = true;\n    }\n    else {\n      this.posts[id].like--;\n      this.posts[id].isLiked = false;\n    }\n  }\n  addToPostLists(post: Post) {\n    this.posts.push(post);\n  }\n  onInitApp() {\n    this.subs = this.postService.getAllPosts().subscribe(\n      (posts) => {\n        this.posts = posts;\n      });\n  }\n  ngOnDestroy() {\n    this.subs.unsubscribe();\n  }\n}\n","import { element } from 'protractor';\r\nimport { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport * as firebase from 'firebase/app';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    constructor(public afAuth: AngularFireAuth) { }\r\n\r\n    fbLogin() {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let provider = new firebase.auth.FacebookAuthProvider();\r\n            provider.addScope('public_profile');\r\n            this.afAuth.auth\r\n                .signInWithPopup(provider)\r\n                .then(res => {\r\n                    let token = res.credential.accessToken;\r\n                    let user = res.user;\r\n                    console.log(token);\r\n                    console.log(user)\r\n                },\r\n                    err => {\r\n                        console.log(err);\r\n                        reject(err);\r\n                    })\r\n        })\r\n    }\r\n\r\n    ggLogin() {\r\n        return new Promise<any>((resolve, reject) => {\r\n            let provider = new firebase.auth.GoogleAuthProvider();\r\n            provider.addScope('profile');\r\n            provider.addScope('email');\r\n            this.afAuth.auth\r\n                .signInWithPopup(provider)\r\n                .then(res => {\r\n                    resolve(res);\r\n                },\r\n                    err => {\r\n                        console.log(err);\r\n                        reject(err);\r\n                    })\r\n        })\r\n    }\r\n\r\n    doRegister(value) {\r\n        return new Promise<any>((resolve, reject) => {\r\n            firebase.auth().createUserWithEmailAndPassword(value.email, value.password)\r\n                .then(res => resolve(res),\r\n                    err => {\r\n                        console.log(err);\r\n                        reject(err);\r\n                    })\r\n        })\r\n    }\r\n\r\n    login(value) {\r\n        return new Promise<any>((resolve, reject) => {\r\n            firebase.auth().signInWithEmailAndPassword(value.email, value.password)\r\n                .then(res => resolve(res),\r\n                    err => reject(err))\r\n        })\r\n    }\r\n    logout() {\r\n        return new Promise<any>((resolve, reject) => {\r\n            if (firebase.auth().currentUser) {\r\n                this.afAuth.auth.signOut();\r\n                resolve();\r\n            }\r\n        })\r\n    }\r\n\r\n}","module.exports = \".header{\\r\\n    text-align: center;\\r\\n    font-size: 30px;\\r\\n    margin-bottom: 40px;\\r\\n  }\\r\\n  \\r\\n  .row{\\r\\n    margin-top: 10px;\\r\\n  }\\r\\n  \\r\\n  .error{\\r\\n    color: red;\\r\\n  }\"","module.exports = \"<h1 class=\\\"header\\\">Login with Firebase or Social Providers</h1>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6 offset-3\\\">\\n      <form [formGroup]=\\\"loginForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label>Email address</label>\\n          <input type=\\\"email\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\">\\n          <label class=\\\"error\\\">{{errorMessage}}</label>\\n        </div>\\n        <button type=\\\"submit\\\" (click)=\\\"tryLogin(loginForm.value)\\\" class=\\\"btn btn-default\\\">Login</button>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 offset-4\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"tryFacebookLogin()\\\">\\n        <i class=\\\"fa fa-facebook\\\" aria-hidden=\\\"true\\\"></i> Login with Facebook\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 offset-4\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-danger btn-block\\\" (click)=\\\"tryGoogleLogin()\\\">\\n        <i class=\\\"fa fa-google\\\" aria-hidden=\\\"true\\\"></i>Login with Google\\n      </button>\\n    </div>\\n  </div>\\n</div>\"","import { Router } from '@angular/router';\nimport { Component, OnInit, HostBinding } from '@angular/core';\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\nimport { AuthService } from './AuthService';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n// import { moveIn } from '../router.animations';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  errorMessage: string = \"\";\n  constructor(public authService: AuthService,\n    private fb: FormBuilder,\n    private router: Router) {\n      this.createForm();\n  }\n\n  ngOnInit() {\n  }\n  createForm() {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  tryFacebookLogin() {\n    this.authService.fbLogin()\n      .then(res => {\n        this.router.navigate(['/user']);\n      })\n  }\n\n  tryGoogleLogin() {\n    this.authService.ggLogin()\n      .then(res => {\n        this.router.navigate(['/user']);\n      })\n  }\n\n  tryLogin(value) {\n    this.authService.login(value)\n      .then(res => {\n        this.router.navigate(['/user']);\n      }, err => {\n        console.log(err);\n        this.errorMessage = err.message;\n      })\n  }\n}\n","export class Post {\r\n    public content: string;\r\n    public like: number;\r\n    public comment: number;\r\n    public createdDate: Date;\r\n    public viewCount: number;\r\n    public isLiked: boolean;\r\n\r\n    constructor(content) {\r\n        this.content = content;\r\n        this.like = 0;\r\n        this.comment = 0;\r\n        this.createdDate = new Date();\r\n        this.viewCount = 0;\r\n        this.isLiked = false;\r\n    }\r\n}","import { AngularFireDatabase } from 'angularfire2/database';\r\nimport { Injectable, OnInit } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Post } from \"./post.model\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class PostService implements OnInit {\r\n    apiUrl: string = \"https://5b1c9da8a1c56c001458c5ca.mockapi.io/api/v1/Post/\";\r\n\r\n    constructor(private httpClient: HttpClient) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    // database\r\n    getAllPosts(): Observable<Post[]> {\r\n        return this.httpClient.get<Post[]>(this.apiUrl);\r\n    }\r\n    addPost(data: Post) {\r\n        return this.httpClient.post(this.apiUrl, data);\r\n    }\r\n    putAllPosts(post: Post[]): Observable<Post[]> {\r\n        return this.httpClient.put<Post[]>(\"https://ngblog-a6835.firebaseio.com/posts.json\", post);\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4 col-md-offset-4\\\">\\n      <div class=\\\"card\\\" style=\\\"width: 20rem;\\\">\\n        <img class=\\\"card-img-top image\\\" [src]=\\\"user.image\\\" alt=\\\"Card image cap\\\">\\n        <div *ngIf='user.provider != \\\"password\\\"'class=\\\"card-body\\\">\\n          <h4 class=\\\"card-title\\\">{{user.name}}</h4>\\n          <p class=\\\"card-text\\\"> </p>\\n        </div>\\n        <div *ngIf='user.provider == \\\"password\\\"'class=\\\"card-body\\\">\\n          <form [formGroup]=\\\"profileForm\\\">\\n            <div class=\\\"form-group\\\">\\n              <label>Your name</label>\\n              <input type=\\\"text\\\" formControlName=\\\"name\\\" class=\\\"form-control\\\" required>\\n            </div>\\n          </form>\\n          <a (click)=\\\"save(profileForm.value)\\\" class=\\\"btn btn-primary\\\">Save</a>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <button type=\\\"button\\\" (click)=\\\"logout()\\\" class=\\\"btn btn-link\\\">Logout</button>\\n    </div>\\n  </div>\\n</div>\"","import { AuthService } from './../login/AuthService';\nimport { UserService } from './user.service';\nimport { FirebaseUserModel } from './user.model';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  user: FirebaseUserModel = new FirebaseUserModel();\n  profileForm: FormGroup;\n\n  constructor(\n    public userService: UserService,\n    public authService: AuthService,\n    private route: ActivatedRoute,\n    private location : Location,\n    private fb: FormBuilder\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(routeData => {\n      let data = routeData['data'];\n      if (data) {\n        this.user = data;\n        this.createForm(this.user.name);\n      }\n    })\n  }\n\n  createForm(name) {\n    this.profileForm = this.fb.group({\n      name: [name, Validators.required ]\n    });\n  }\n\n  save(value){\n    this.userService.updateCurrentUser(value)\n    .then(res => {\n      console.log(res);\n    }, err => console.log(err))\n  }\n\n  logout(){\n    this.authService.logout()\n    .then((res) => {\n      this.location.back();\n    }, (error) => {\n      console.log(\"Logout error\", error);\n    });\n  }\n}\n","export class FirebaseUserModel {\r\n    image: string;\r\n    name: string;\r\n    provider: string;\r\n  \r\n    constructor(){\r\n      this.image = \"\";\r\n      this.name = \"\";\r\n      this.provider = \"\";\r\n    }\r\n  }","import { UserService } from './user.service';\r\nimport { FirebaseUserModel } from './user.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, Router } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class UserResolver implements Resolve<FirebaseUserModel> {\r\n\r\n  constructor(public userService: UserService, private router: Router) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot) : Promise<FirebaseUserModel> {\r\n\r\n    let user = new FirebaseUserModel();\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.userService.getCurrentUser()     \r\n      .then(res => {\r\n        if(res.providerData[0].providerId == 'password'){\r\n          user.image = 'http://dsi-vd.github.io/patternlab-vd/images/fpo_avatar.png';\r\n          user.name = res.displayName;\r\n          user.provider = res.providerData[0].providerId;\r\n          return resolve(user);\r\n        }\r\n        else{\r\n          user.image = res.photoURL;\r\n          user.name = res.displayName;\r\n          user.provider = res.providerData[0].providerId;\r\n          return resolve(user);\r\n        }\r\n      }, err => {\r\n        this.router.navigate(['/login']);\r\n        return reject(err);\r\n      })\r\n    })\r\n  }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { AngularFirestore } from 'angularfire2/firestore';\r\nimport { AngularFireAuth } from 'angularfire2/auth';\r\nimport * as firebase from 'firebase/app';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n\r\n  constructor(\r\n   public afAuth: AngularFireAuth\r\n ){\r\n }\r\n\r\n\r\n  getCurrentUser(){\r\n    return new Promise<any>((resolve, reject) => {\r\n      var user = firebase.auth().onAuthStateChanged((user)=>{\r\n        if (user) {\r\n          resolve(user);\r\n        } else {\r\n          reject('No user logged in');\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  updateCurrentUser(value){\r\n    return new Promise((resolve, reject) => {\r\n      var user = firebase.auth().currentUser;\r\n      user.updateProfile({\r\n        displayName: value.name,\r\n        photoURL: user.photoURL\r\n      }).then(res => {\r\n        resolve(res)\r\n      }, err => reject(err))\r\n    })\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyC5y-e7x9Y_eWNrDf6p3-9kZrq8TAhx-kw\",\n    authDomain: \"ngblog-a6835.firebaseapp.com\",\n    databaseURL: \"https://ngblog-a6835.firebaseio.com\",\n    projectId: \"ngblog-a6835\",\n    storageBucket: \"ngblog-a6835.appspot.com\",\n    messagingSenderId: \"1060454062184\"\n  }\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}